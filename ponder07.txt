Your Name: Nathan Johnston

1. Take a minute to search the Internet for an explanation of "polymorphism". You might especially consider sources such as StackOverflow and Wikipedia. After reading through some of these, in your own words, describe polymorphism AND why it's useful.
      - Polymorphism is treating different data types the same, without regard to the differences between those datatypes. For example: in python, print(x) will output to the screen whatever x is, no matter what. If x is a float, integer, string, class, object, shopping cart, .pdf file, airplane engine casing bolt purchase, the parent of a small child, print(x) will print x. There aren't different use cases for the different data types, but rather one use case.  

2. What is the benefit of making an empty abstract method in a base class?
      - Making an abstract method empty forces subclasses to override the method. I feel the programmer should at least include an 'missing method override' exception in the abstract method of a base class.

3. What is the most interesting thing you learned as a part of your work for this class this week?
      - I learned that there's an algorithm for calculating fibonacci numbers: f(n) == f(n-1) + f(n-2), where f(2) and f(1) == 1.

4. Describe one specific way that you helped someone else this week, or reached out for help.
      - I helped my team member with understanding what the skeet.py game is supposed to look like

5. Are there any topics from this week that you still feel uneasy about, or would like to learn more about?
      - I am comfortable with recursion.

6. How much time did you spend this week on each of the following:

Reading - 20m
Checkpoint A - 20m
Checkpoint B - 20m
Team Activity - 1hr
Data Structures Homework - 15m
Prove Assignment - 4hr

If you have other questions or comments for the instructor, please post them to Slack, either in the general channel if others can benefit, or as a direct message if the matter is more personal.
